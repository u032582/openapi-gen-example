plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id "org.openapi.generator" version "5.4.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
//	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation "org.springdoc:springdoc-openapi-ui:1.6.6"
	implementation 'org.openapitools:jackson-databind-nullable:0.2.2'
	implementation 'io.swagger.parser.v3:swagger-parser:2.0.30'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    configFile = "$rootDir/specs/config.json".toString()
    inputSpec = "$rootDir/specs/openapi.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.example.api"
    invokerPackage = "com.example.invoker"
    modelPackage = "com.example.model"
    configOptions = [
        dateLibrary: "java8"
    ]
}

compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "${openApiGenerate.outputDir.get()}/src/main/java"

